log4j学习记录：

资源来自：https://www.yiibai.com/log4j 易百教程

1.log4j安装配置

log4j是高度可配置的，并可通过在运行时的外部文件配置。它根据日志的优先级别，并提供机制，以指示记录信息到许多的目的地
，诸如：数据库，文件，控制台，unix系统日志等

log4j中有三个主要的组成部分：

    。loggers：负责捕获记录信息
    。appenders：负责发布日志信息，以不同的目的首选项
    。layouts：负责格式化不同风格的日志信息

    特性：线程安全
         基于一个名为记录器的层次结构
         ×××  支持每个记录器输出到多个追加器（Appenders）
         支持国际化
         日志行为可以使用配置文件在运行时设置
         log4j设计从一开始就是处理java异常
         ××× log4j使用多个层次，即ALL, TRACE , DEBUG , INFO , WARNING , FATAL
         ××× 日志输出的格式可以通过扩展layouts类容易的改变
         ××× 日志输出的目标，以及写入策略可以通过实现Appender借口改变



2.log4j架构
      图片参考：log4j架构.png




            Logger Object ------ >  Filter Object#1  ---->Filter Object#2 ------ >  Appender#1
                        |
                        |
                        |-------->  Filter Object#1 ----> Filter Object#2 -------> Appender#2


                                                                                        ^
                                                                                        |
                                                                                        |
                                                                                        |
                                                                                      Layouts
            从上面我们可以看到：Logger可以把日志信息发送到好几个Appender
                             Appender前面可以接好几个Filter
                             Layout来格式化Appender的输出




3.log4j配置

log4j.properties文件是一个key-value对保存log4j配置属性文件。默认情况下，日志管理在classpath查找一个名为
log4j.properties的文件

语法：

# define the root logger with appender name X in the level of DEBUG
log4j.rootLogger=DEBUG,x   # level , name

# set the appender named X to be a file appender
log4j.appender.X=org.apache.log4j.FileAppender    # appender class

# define the layout for X appender
log4j.appender.X.layout=org.apache.PatternLayout  # Layout class
log4j.appender.X.layout.conversionPattern=%m%n    # layout format


eg :

#define the root logger with appender FileAppender in the level of info
log4j.rootLogger=INFO,File

#define the file appender
log4j.appender.File=org.apache.log4j.FileAppender

#define the layout for file appender
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.conversionPattern=%m%n

解释：第一个一个名字为File，level为info的appender
     这个appender的类为org.apache.log4j.FileAppender
     这个appender使用的Layout是org.apache.log4j.PatternLayout
     这个layout使用的格式是%m%n



log4j支持unix风格的变量替换， 如${variableName}

调试级别：

        TRACE  # 追踪这条信息，也就是说把一条普通信息，当做一个日志信息
        DEBUG  # 将日志信息的警告级别为DEBUG
        INFO
        WARN
        ERROR
        FATAL
        ALL


log4j提供的Appender对象主要负责打印日志消息到不同的目的地，如控制台，文件，sockets，NT事件日志等等


每个Appender对象具有与之相关联的不同属性，并且这些属性表明对象的行为

属性                                  描述

layout                      Appender使用布局对象和预支相关的格式化日志记录信息
target                      Appender的输出目标，可以是控制台，一个文件
level                       级别是必须的，以控制日志消息的过滤
threshhold                  Appender可以有与之独立的记录器级别相关联的级别阈值水平，
                            Appender忽略具有级别低于阈值级别的任何日志消息

filter                      Filter对象可以分析超出级别的匹配记录信息，并决定是否记录的请求应该有一个特定的Appender或这忽略处理




/*****************************************************************
log4j的主要几个类：

Logger :

Category (org.apache.log4j)
    Logger (org.apache.log4j)
        NOPLogger (org.apache.log4j.spi)
        RootLogger (org.apache.log4j.spi)   ------> 对应log4j.properties中的log4j.rootLogger
        RootCategory (org.apache.log4j.spi)


Appender:
        JDBCAppender (org.apache.log4j.jdbc)
        AppenderSkeleton (org.apache.log4j)
            SocketHubAppender (org.apache.log4j.net)
            SyslogAppender (org.apache.log4j.net)
            SocketAppender (org.apache.log4j.net)
            NullAppender (org.apache.log4j.varia)
            TelnetAppender (org.apache.log4j.net)
            LF5Appender (org.apache.log4j.lf5)
            RewriteAppender (org.apache.log4j.rewrite)
            SMTPAppender (org.apache.log4j.net)
            WriterAppender (org.apache.log4j)
                ConsoleAppender (org.apache.log4j)
                FileAppender (org.apache.log4j)
            NTEventLogAppender (org.apache.log4j.nt)
            JDBCAppender (org.apache.log4j.jdbc)
            AsyncAppender (org.apache.log4j)
            JMSAppender (org.apache.log4j.net)

/*************************************************************



































































